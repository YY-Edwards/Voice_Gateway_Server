<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Views="clr-namespace:Manager.Views">


    <Style TargetType="{x:Type Views:ManageView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Views:ManageView}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="#FF313133">
                            <ScrollViewer x:Name="scrollViewer" VerticalScrollBarVisibility="Auto"  Margin="0" Style="{DynamicResource ScrollViewerStyleNormal}" Padding="20,6">
                                <AdornerDecorator>
                                    <ContentPresenter x:Name="container" />
                                </AdornerDecorator>
                            </ScrollViewer>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Views:MapBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Views:MapBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            ClipToBounds="True">
                        <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Disabled">
                            <Canvas>
                                <Grid x:Name="_layerContainer" RenderTransformOrigin="0,0" Margin="0" 
        				            Width="{Binding MapRect.Width, RelativeSource={RelativeSource TemplatedParent}}" 
        				            Height="{Binding MapRect.Height, RelativeSource={RelativeSource TemplatedParent}}" 
        				            Canvas.Left="{Binding MapRect.X, RelativeSource={RelativeSource TemplatedParent}}" 
        				            Canvas.Top="{Binding MapRect.Y, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Canvas>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Views:MapLayer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Views:MapLayer}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid x:Name="_pointsContainer" Tag="_pointsContainer" />
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   


    <Storyboard x:Key="OnBeaconLoedStoryBoard" RepeatBehavior="Forever">
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ellipse">
            <EasingColorKeyFrame KeyTime="0" Value="#008E8EF1"/>
            <EasingColorKeyFrame KeyTime="0:0:1" Value="#00A7A7F3"/>
        </ColorAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ellipse">
            <EasingColorKeyFrame KeyTime="0" Value="#00A7A7F3"/>
            <EasingColorKeyFrame KeyTime="0:0:1" Value="#00A7A7F3"/>
        </ColorAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" Storyboard.TargetName="ellipse">
            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" Storyboard.TargetName="ellipse">
            <EasingDoubleKeyFrame KeyTime="0" Value="0.284"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.428"/>
            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.637"/>
            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0.297"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" Storyboard.TargetName="ellipse">
            <EasingDoubleKeyFrame KeyTime="0" Value="0.859"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.68"/>
            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.997"/>
            <EasingDoubleKeyFrame KeyTime="0:0:3" Value="0.742"/>
        </DoubleAnimationUsingKeyFrames>
        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="ellipse">
            <EasingColorKeyFrame KeyTime="0" Value="#FF8E8EF1"/>
            <EasingColorKeyFrame KeyTime="0:0:1" Value="#FF1F83E6"/>
        </ColorAnimationUsingKeyFrames>
    </Storyboard>


    <!--<Style TargetType="{x:Type local:iBeaconPoint}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:iBeaconPoint}">
                    <Grid HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100">
                        <Border x:Name="border" BorderBrush="Black" BorderThickness="0" HorizontalAlignment="Left" Height="100" VerticalAlignment="Top" Width="100" Background="#00000000" Visibility="Visible">
                            <Ellipse x:Name="ellipse" HorizontalAlignment="Left" Height="100"  VerticalAlignment="Top" Width="100" Visibility="Hidden" Margin="0,0,-2,-2">
                                <Ellipse.Fill>
                                    <RadialGradientBrush>
                                        <GradientStop Color="Black" Offset="0"/>
                                        <GradientStop Color="White" Offset="1"/>
                                        <GradientStop Color="#FFA7A7F3" Offset="0.493"/>
                                    </RadialGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Border>
                        <Image x:Name="img_Bluetooth" HorizontalAlignment="Center" Height="20" VerticalAlignment="Center" Source="pack://application:,,,/views/images/bluetooth.png" Width="20">
                        </Image>
                        <Border x:Name="border1" BorderBrush="#CC4E77E4" BorderThickness="1" HorizontalAlignment="Center" Height="20" VerticalAlignment="Top" Margin="0,62.669,0,0" CornerRadius="4" Background="#99FFFFFF" Visibility="Hidden">
                            <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="({0},{1})">
                                        <Binding Path="iBeacon.Major" Mode="OneWay" RelativeSource ="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="iBeacon.Minor" Mode="OneWay" RelativeSource ="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="border1" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="{x:Type Views:BeaconPoint}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Views:BeaconPoint}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border x:Name="border" BorderBrush="Black" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Background="#00000000" Visibility="Visible">
                                <Ellipse x:Name="ellipse" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"  Visibility="Hidden" >
                                    <Ellipse.Fill>
                                        <RadialGradientBrush>
                                            <GradientStop Color="Black" Offset="0"/>
                                            <GradientStop Color="White" Offset="1"/>
                                            <GradientStop Color="#FFA7A7F3" Offset="0.493"/>
                                        </RadialGradientBrush>
                                    </Ellipse.Fill>
                                </Ellipse>
                            </Border>
                            <Image x:Name="img_Bluetooth" HorizontalAlignment="Center" Height="20" VerticalAlignment="Center" Source="/Manager;component/Views/images/bluetooth.png" Width="20" />
                            <Border x:Name="border1" BorderBrush="#CC4E77E4" BorderThickness="1" HorizontalAlignment="Center" Height="20" VerticalAlignment="Top" Margin="0,64,0,0" CornerRadius="4" Background="#99FFFFFF" Visibility="Hidden">
                                <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="({0},{1})">
                                            <Binding Path="Beacon.Major" Mode="OneWay" RelativeSource ="{RelativeSource TemplatedParent}"/>
                                            <Binding Path="Beacon.Minor" Mode="OneWay" RelativeSource ="{RelativeSource TemplatedParent}"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnBeaconLoedStoryBoard}"/>
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="ellipse" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="border1" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="StoryboardLoadIcon" RepeatBehavior="Forever">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="image1">
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="60"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="120"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.9" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="240"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.3" Value="300"/>
            <EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="360"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>


    <Style TargetType="{x:Type Views:LoadIcon}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Views:LoadIcon}">
                    <Border>
                        <Image x:Name="image1" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" RenderTransformOrigin="0.5,0.5" Source="/Manager;component/Views/images/loadicon.png">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                            <Image.Triggers>
                                <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource StoryboardLoadIcon}"/>
                                </EventTrigger>
                            </Image.Triggers>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
