<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:local="clr-namespace:TrboX" x:Class="TrboX.IconBtn" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	<UserControl.Resources>
		<Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="HorizontalContentAlignment" Value="Center"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid x:Name="grid">
							<Image x:Name="Image"  HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Source="{Binding Normal, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:IconBtn}}}"/>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="129.556,142.38,127.556,140.38" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Hidden"/>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="True">
                                <Setter Property="Source" TargetName="Image" Value="{Binding Press, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type local:IconBtn}}}"/>
                                <Setter Property="Background" TargetName="grid" Value="{x:Null}"/>
							</Trigger>
							<!--<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="Source" TargetName="Image" Value="{Binding Hover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:IconBtn}}}"/>
							</Trigger>-->
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Source" TargetName="Image" Value="{Binding Disable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:IconBtn}}}"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="IsPressed" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Source" TargetName="Image" Value="{Binding Hover, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:IconBtn}}}"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	<Grid>
        <Button x:Name="mybtn" Content="Button" Style="{DynamicResource ButtonStyle1}" Click="Button_Click"/>
    </Grid>
</UserControl>
