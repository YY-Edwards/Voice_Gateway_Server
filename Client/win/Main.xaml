<local:MyWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:TrboX"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
        xmlns:local="clr-namespace:TrboX"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="TrboX.Main"
        Icon="/TrboX;component/themes/resource/Logo.png"  
        Title="TrboX" Height="640" Width="1024" Closed="MyWindow_Closed" WindowStartupLocation="CenterScreen" Loaded="MyWindow_Loaded">
    <local:MyWindow.Resources>
        <!-- Simple TextBox -->
        <Style x:Key="TextBoxStyleNormal" TargetType="{x:Type TextBox}">
        	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TextBox}">
        				<Grid>
        					<Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="Black" BorderThickness="1" Padding="2" CornerRadius="0">

                                <!-- 实现时会将 Content 置于 ScrollViewer 中。必须将其命名为 PART_ContentHost，控件才能起作用 -->
        						<ScrollViewer Margin="0" x:Name="PART_ContentHost" Style="{DynamicResource SimpleScrollViewer}" Background="{TemplateBinding Background}"/>

        					</Border>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="False">
        						<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
        						<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
        						<Setter Property="BorderBrush" TargetName="Border" Value="#FF888888"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
        	<GradientStop Color="#ABADB3" Offset="0.05"/>
        	<GradientStop Color="#E2E3EA" Offset="0.07"/>
        	<GradientStop Color="#E3E9EF" Offset="1"/>
        </LinearGradientBrush>
        <Style x:Key="PasswordBoxStyleNormal" TargetType="{x:Type PasswordBox}">
        	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        	<Setter Property="FontFamily" Value="Times New Roman"/>
        	<Setter Property="PasswordChar" Value="●"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Left"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        	<Setter Property="AllowDrop" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type PasswordBox}">
        				<Grid Height="Auto" Width="Auto">
        					<Border x:Name="border" BorderBrush="Black" BorderThickness="1">
        						<Themes:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true" Margin="0">
        							<ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						</Themes:ListBoxChrome>
        					</Border>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        						<Setter Property="Background" TargetName="border" Value="{x:Null}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="#FF888888"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="MenuStyleNormal" TargetType="{x:Type Menu}">
        	<Setter Property="Background" Value="{DynamicResource LightBrush}"/>
        	<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        	<Setter Property="SnapsToDevicePixels" Value="True"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Menu}">
        				<Grid>
        					<Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
        					<StackPanel IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsEnabled" Value="False">
        						<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
        						<Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="MenuItemStyleNormal" TargetType="{x:Type MenuItem}">
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type MenuItem}">
        				<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1">
        					<Grid x:Name="grid">

        						<!-- Grid 用于结合 Icon、Content、Glyph 复选标记和 Arrow 的列，以显示下一个级别
							 Grid 中采用大小共享方式，以便将每个 MenuItem 的 Icon、Content 和 Arrow 一起对齐 -->
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
        							<ColumnDefinition Width="*"/>
        							<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
        							<ColumnDefinition Width="14"/>
        						</Grid.ColumnDefinitions>

                                <!-- ContentPresenter 用来显示 Icon (如果需要) -->
        						<ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                                <!-- Glyph 是一个复选标记(如果可选中的菜单需要) -->
        						<Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
        							<Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
        						</Grid>

                                <!-- 菜单文本等内容 -->
        						<ContentPresenter Grid.Column="1" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" Margin="6,0" VerticalAlignment="Center"/>

                                <!-- 箭头绘制的路径，该路径指向菜单的下一个级别 -->
        						<Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
        							<Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
        						</Grid>

                                <!-- Popup 是向下展开或横向展开(具体取决于该项所处的级别)的菜单的主体 -->
        						<Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
        							<Grid x:Name="SubMenu">
        								<Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="#000000" BorderThickness="1"/>

        								<!-- StackPanel 保留菜单的子级。这是通过 IsItemsHost=True 来设置的 -->
        								<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
        							</Grid>
        						</Popup>

        					</Grid>
        				</Border>

        				<!-- 这些触发器通过 Role 重新配置 MenuItem 的四种排列方式以显示不同级别的菜单 -->
        				<ControlTemplate.Triggers>

        					<Trigger Property="ButtonBase.Command" Value="{x:Null}"/>

        					<Trigger Property="IsPressed" Value="True">
        						<Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
        						<Setter Property="BorderBrush" TargetName="Border" Value="Black"/>
        						<Setter Property="Background" TargetName="grid" Value="Black"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        					</Trigger>

        					<!-- Role = TopLevelHeader: 这是菜单中的根菜单项；Popup 向下展开 -->
        					<Trigger Property="Role" Value="TopLevelHeader">
        						<Setter Property="Margin" Value="0,1,0,1"/>
        						<Setter Property="Padding" Value="6,3,6,3"/>
        						<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        						<Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
        						<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
        					</Trigger>
        					<EventTrigger RoutedEvent="FrameworkElement.Loaded"/>

        					<!-- Role = TopLevelItem:  这是没有任何子项的顶级菜单的子菜单项-->
        					<Trigger Property="Role" Value="TopLevelItem">
        						<Setter Property="Margin" Value="0,1,0,1"/>
        						<Setter Property="Padding" Value="6,3,6,3"/>
        						<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
        					</Trigger>

        					<!-- Role = SubMenuHeader: 这是不包含子级的子菜单项 -->
        					<Trigger Property="Role" Value="SubmenuHeader">
        						<Setter Property="DockPanel.Dock" Value="Top"/>
        						<Setter Property="Padding" Value="0,2,0,2"/>
        						<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        					</Trigger>

        					<!-- Role = SubMenuItem: 这是包含子级的子菜单项-->
        					<Trigger Property="Role" Value="SubmenuItem">
        						<Setter Property="DockPanel.Dock" Value="Top"/>
        						<Setter Property="Padding" Value="0,2,0,2"/>
        						<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
        					</Trigger>
        					<Trigger Property="IsSuspendingPopupAnimation" Value="true">
        						<Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
        					</Trigger>

        					<!-- 如果不存在 Icon，我们会折叠 Icon Content -->
        					<Trigger Property="Icon" Value="{x:Null}">
        						<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
        					</Trigger>

        					<!-- GlyphPanel 包含 CheckMark -->
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
        						<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
        					</Trigger>

        					<Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
        						<Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
        						<Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
        						<!--<Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/> -->
        					</Trigger>

        					<!-- 对 Menu Highlight 和 IsEnabled 使用系统颜色-->
        					<Trigger Property="IsHighlighted" Value="true">
        						<Setter Property="Background" TargetName="Border" Value="{x:Null}"/>
        						<Setter Property="BorderBrush" TargetName="Border" Value="Black"/>
        						<Setter Property="Background" TargetName="grid" Value="Black"/>
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        					</Trigger>
        					<!--
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="Border" Value="Black"/>
								<Setter Property="BorderBrush" TargetName="Border" Value="{x:Null}"/>
								<Setter Property="Background" TargetName="grid" Value="{x:Null}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							-->
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    	<Style x:Key="ButtonStyleIcon" TargetType="{x:Type Button}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Padding" Value="1"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Button}">
    					<Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto">
    						<ContentPresenter HorizontalAlignment="Stretch" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsPressed" Value="True">
    							<Setter Property="Background" TargetName="border" Value="Black"/>
    						</Trigger>
    						<Trigger Property="IsMouseOver" Value="True">
    							<Setter Property="BorderThickness" TargetName="border" Value="1"/>
    							<Setter Property="BorderBrush" TargetName="border" Value="Black"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="#ADADAD"/>
    							<Setter Property="OpacityMask" TargetName="border" Value="#7F000000"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
       
  </local:MyWindow.Resources>

    <local:MyWindow.Style>
        <StaticResource ResourceKey="MyWindowStyle"/>
  </local:MyWindow.Style>
	<Grid Margin="0">
		<DockPanel>
			<Border BorderBrush="Black" BorderThickness="1" Margin="0,0,0,1" DockPanel.Dock="Top" Height="30">
				<Menu Style="{DynamicResource MenuStyleNormal}">
					<MenuItem Header="视图" Height="28" Margin="0" Style="{DynamicResource MenuItemStyleNormal}" VerticalAlignment="Top">
						<MenuItem Header="视图" Height="28" Margin="0" Style="{DynamicResource MenuItemStyleNormal}" VerticalAlignment="Top" Width="100">
							<MenuItem Header="视图" Height="28" Margin="0" Style="{DynamicResource MenuItemStyleNormal}" VerticalAlignment="Top" Width="71.1"/>
						</MenuItem>
						<MenuItem Header="视图" Height="28" Margin="0" Style="{DynamicResource MenuItemStyleNormal}" VerticalAlignment="Top" Width="100"/>
						<MenuItem Header="视图" Height="28" Margin="0" Style="{DynamicResource MenuItemStyleNormal}" VerticalAlignment="Top" Width="100"/>
						<MenuItem Header="视图" Height="28" Margin="0" Style="{DynamicResource MenuItemStyleNormal}" VerticalAlignment="Top" Width="100"/>
					</MenuItem>
					<MenuItem Header="帮助" HorizontalAlignment="Left" Style="{DynamicResource MenuItemStyleNormal}" Margin="0"/>
				</Menu>
			</Border>
			<Border BorderBrush="Black" BorderThickness="1" Height="30" DockPanel.Dock="Top" Margin="0,0,0,1">
				<DockPanel LastChildFill="False">
					<Border BorderBrush="Black" BorderThickness="1,0" Width="124" Margin="0,0,5,0">
						<DockPanel LastChildFill="False">
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,86,22,22" ContentTemplate="{DynamicResource ButtonIconTemplate}" Width="24" Margin="3,0" Height="24"  VerticalAlignment="Center" Style="{DynamicResource ButtonStyleIcon}" Click="Button_Click_1" />
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,45,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="8,168,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,127,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
						</DockPanel>
					</Border>
					<Border BorderBrush="Black" BorderThickness="1,0" Height="28" VerticalAlignment="Top" Width="120.333" Margin="0,0,5,0">
						<DockPanel LastChildFill="False" Margin="0,0,-24,0">
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,209,22,22" ContentTemplate="{DynamicResource ButtonIconTemplate}" Width="24" Margin="3,0" Height="24"  VerticalAlignment="Center" Style="{DynamicResource ButtonStyleIcon}" />
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,250,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,290,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="7,329,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
						</DockPanel>
					</Border>
					<Border BorderBrush="Black" BorderThickness="1,0" Height="28" VerticalAlignment="Top" Width="128" Margin="0,0,5,0">
						<DockPanel LastChildFill="False" Margin="0,0,-24,0">
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="38,86,22,22" ContentTemplate="{DynamicResource ButtonIconTemplate}" Width="24" Margin="3,0" Height="24"  VerticalAlignment="Center" Style="{DynamicResource ButtonStyleIcon}" />
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="38,45,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="38,168,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="38,127,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
						</DockPanel>
					</Border>
					<Border BorderBrush="Black" BorderThickness="1,0" Height="28" VerticalAlignment="Top" Width="125" Margin="0,0,5,0">
						<DockPanel LastChildFill="False" Margin="0,0,-24,0">
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="69,86,22,22" ContentTemplate="{DynamicResource ButtonIconTemplate}" Width="24" Margin="3,0" Height="24"  VerticalAlignment="Center" Style="{DynamicResource ButtonStyleIcon}" />
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="69,45,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="69,168,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
							<Button local:CExIcon.Icon="/TrboX;component/themes/resource/icon-2.png" local:CExIcon.Range="69,127,22,22" Style="{DynamicResource ButtonStyleIcon}" Width="24" Margin="3,0" Height="24" ContentTemplate="{DynamicResource ButtonIconTemplate}" VerticalAlignment="Center"/>
						</DockPanel>
					</Border>
				</DockPanel>
			</Border>
			<Border BorderBrush="Black" BorderThickness="1" Margin="0,1,0,0" DockPanel.Dock="Bottom" Height="30"/>
			<Border BorderBrush="Black" BorderThickness="1" Margin="0">
				<Grid  x:Name="MyWebGrid"/>
			</Border>
		</DockPanel>

	</Grid>
</local:MyWindow>
