<src:MyWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:src="clr-namespace:TrboX"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"                   
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="TrboX.About"                   
        Icon="/TrboX;component/themes/resource/Logo.png"                    
        Title="" Height="412" Width="682" WindowStartupLocation="CenterScreen">
    <src:MyWindow.Resources>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid x:Name="grid" SnapsToDevicePixels="true" Background="#00000000">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" ContentSource="Icon"/>
                    <Border x:Name="GlyphPanel" Width="22" VerticalAlignment="Center" Visibility="Hidden" Margin="1" Height="22" CornerRadius="3" Background="#E6EFF4" BorderThickness="1" BorderBrush="#CDD3E6">
                        <Image x:Name="image"/>
                    </Border>
                    <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" ContentSource="Header" Grid.Column="2"/>
                    <TextBlock VerticalAlignment="Center" Text="{TemplateBinding InputGestureText}" Margin="{TemplateBinding Padding}" FontSize="13" Grid.Column="4"/>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="grid" Value="#FF5695DB"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    <Setter Property="Background" TargetName="GlyphPanel" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{x:Null}"/>
                    <Setter Property="Height" TargetName="image" Value="16"/>
                    <Setter Property="Width" TargetName="image" Value="16"/>
                    <Setter Property="Source" TargetName="image" Value="/TrboX;component/resource/images/menu_chk_16_16_n.png"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true"/>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False"/>
                        <Condition Property="IsChecked" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Background" TargetName="GlyphPanel" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{x:Null}"/>
                    <Setter Property="Source" TargetName="image" Value="/TrboX;component/resource/images/menu_chk_16_16_d .png"/>
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False"/>
                        <Condition Property="IsChecked" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Hidden"/>
                    <Setter Property="Background" TargetName="GlyphPanel" Value="{x:Null}"/>
                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="{x:Null}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#28717070" Offset="0"/>
            <GradientStop Color="#50717070" Offset="0.75"/>
            <GradientStop Color="#90717070" Offset="1"/>
        </LinearGradientBrush>
        <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
        <SolidColorBrush x:Key="SubMenuBackgroundBrush" Color="#FFF5F5F5"/>
        <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <DockPanel Background="Transparent" SnapsToDevicePixels="true">
                            <Rectangle x:Name="R1" Width="1" Fill="Transparent" DockPanel.Dock="Right"/>
                            <Rectangle x:Name="B1" Height="1" Fill="Transparent" DockPanel.Dock="Bottom"/>
                            <Rectangle x:Name="L1" Width="1" Fill="Transparent" DockPanel.Dock="Left"/>
                            <Rectangle x:Name="T1" Height="1" Fill="Transparent" DockPanel.Dock="Top"/>
                            <ContentPresenter x:Name="ContentContainer" VerticalAlignment="Center" Margin="2,2,2,2" HorizontalAlignment="Center"/>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Setter Property="Fill" TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                                <Setter Property="Fill" TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                <Setter Property="Fill" TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                                <Setter Property="Margin" TargetName="ContentContainer" Value="3,3,1,1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Style="{StaticResource MenuScrollButton}" Grid.Row="0" Focusable="false" Command="{x:Static ScrollBar.LineUpCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0">
                                <RepeatButton.Visibility>
                                    <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                            </RepeatButton>
                            <RepeatButton Style="{StaticResource MenuScrollButton}" Grid.Row="2" Focusable="false" Command="{x:Static ScrollBar.LineDownCommand}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="0">
                                <RepeatButton.Visibility>
                                    <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
                <Rectangle x:Name="Bg" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" RadiusX="1" RadiusY="1" Margin="1" Fill="{TemplateBinding Background}"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                    <ContentPresenter x:Name="Icon" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" ContentSource="Icon"/>
                    <Path x:Name="GlyphPanel" VerticalAlignment="Center" Visibility="Collapsed" Margin="7,0,0,0" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Data="{StaticResource Checkmark}"/>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" ContentSource="Header"/>
                </DockPanel>
                <Popup x:Name="PART_Popup" VerticalOffset="-1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" HorizontalOffset="1" Focusable="false" AllowsTransparency="true">
                    <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                        <Border x:Name="SubMenuBorder" Background="{StaticResource SubMenuBackgroundBrush}" BorderThickness="1" BorderBrush="#FF959595">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Margin="1,0">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Width="0" VerticalAlignment="Top" Height="0" HorizontalAlignment="Left">
                                        <Rectangle x:Name="OpaqueRect" Width="{Binding ActualWidth, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Fill="{StaticResource SubMenuBackgroundBrush}"/>
                                    </Canvas>
                                    <Rectangle Width="28" RadiusX="2" RadiusY="2" Margin="1,2" HorizontalAlignment="Left" Fill="#F1F1F1"/>
                                    <Rectangle Width="1" Margin="29,2,0,2" HorizontalAlignment="Left" Fill="#E2E3E3"/>
                                    <Rectangle Width="1" Margin="30,2,0,2" HorizontalAlignment="Left" Fill="White"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Value="true" SourceName="PART_Popup" Property="HasDropShadow">
                    <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                    <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                    <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                </Trigger>
                <Trigger Property="IsSubmenuOpen" Value="true">
                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                    <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
                </Trigger>
                <Trigger Value="false" SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder" RadiusY="2" RadiusX="2"/>
                <Rectangle x:Name="Bg" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" RadiusX="1" RadiusY="1" Margin="1" Fill="{TemplateBinding Background}"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                    <ContentPresenter x:Name="Icon" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,0,6,0" ContentSource="Icon"/>
                    <Path x:Name="GlyphPanel" VerticalAlignment="Center" Visibility="Collapsed" Margin="7,0,0,0" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Data="{StaticResource Checkmark}"/>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" ContentSource="Header"/>
                </DockPanel>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Stroke" TargetName="Bg" Value="#90717070"/>
                    <Setter Property="Stroke" TargetName="OuterBorder" Value="#50FFFFFF"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50FFFFFF"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter Property="Stroke" TargetName="Bg" Value="#E0717070"/>
                    <Setter Property="Fill" TargetName="Bg" Value="{StaticResource MenuItemPressedFill}"/>
                    <Setter Property="Stroke" TargetName="InnerBorder" Value="#50747272"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Grid x:Name="grid" SnapsToDevicePixels="true" Background="#009E8F8F">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="4"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="37"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="17"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="1" ContentSource="Icon"/>
                    <Border x:Name="GlyphPanel" Width="22" Visibility="Hidden" Margin="1" Height="22" CornerRadius="3" Background="#E6EFF4" BorderThickness="1" BorderBrush="#CDD3E6">
                        <Path x:Name="Glyph" Width="9" Height="11" FlowDirection="LeftToRight" Fill="#0C12A1" Data="{StaticResource Checkmark}"/>
                    </Border>
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" ContentSource="Header" Grid.Column="2"/>
                    <TextBlock Visibility="Collapsed" Text="{TemplateBinding InputGestureText}" Margin="{TemplateBinding Padding}" Grid.Column="4"/>
                    <Path VerticalAlignment="Center" Margin="4,0,0,0" Fill="{TemplateBinding Foreground}" Data="{StaticResource RightArrow}" Grid.Column="5"/>
                </Grid>
                <Popup x:Name="PART_Popup" VerticalOffset="-3" Placement="Right" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" HorizontalOffset="-2" Focusable="false" AllowsTransparency="true">
                    <Grid Width="Auto" Height="Auto" Background="{x:Null}">
                        <Border x:Name="SubMenuBorder" Margin="0,0,5,5" Background="#FF4C4C4F" BorderThickness="1" BorderBrush="#FF262626">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="3" Opacity="0.5" Direction="315" Color="#FF262626" BlurRadius="5"/>
                            </Border.Effect>
                            <ScrollViewer x:Name="SubMenuScrollViewer" VerticalScrollBarVisibility="Disabled" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" Margin="0" HorizontalScrollBarVisibility="Disabled">
                                <Grid Margin="0,8" RenderOptions.ClearTypeHint="Enabled" Background="{x:Null}">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true"/>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter Property="Background" TargetName="grid" Value="#FF5695DB"/>
                    <Setter Property="Margin" TargetName="grid" Value="1,0"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="#FF9A9A9A"/>
                    <Setter Property="Background" TargetName="GlyphPanel" Value="#EEE9E9"/>
                    <Setter Property="BorderBrush" TargetName="GlyphPanel" Value="#DBD6D6"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#848589"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="MenuItemStyleSub" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
            <Style.Triggers>
                <Trigger Property="Role" Value="TopLevelHeader">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="TopLevelItem">
                    <Setter Property="Padding" Value="7,2,8,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                    <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuItem">
                    <Setter Property="Padding" Value="2,3,2,3"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuItemStyleTilte" TargetType="{x:Type MenuItem}">
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border" Padding="1" CornerRadius="4" Background="{x:Null}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{x:Null}">
                            <Grid x:Name="grid">

                                <!-- ContentPresenter 用来显示 Icon (如果需要) -->

                                <!-- Grid 用于结合 Icon、Content、Glyph 复选标记和 Arrow 的列，以显示下一个级别
							 Grid 中采用大小共享方式，以便将每个 MenuItem 的 Icon、Content 和 Arrow 一起对齐 -->
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="4" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                    <ColumnDefinition Width="4"/>
                                </Grid.ColumnDefinitions>
                                <!-- ContentPresenter 用来显示 Icon (如果需要) -->
                                <ContentPresenter x:Name="Icon" VerticalAlignment="Center" Visibility="Collapsed" Margin="4,12,6,12" Height="0" ContentSource="Icon"/>
                                <!-- Glyph 是一个复选标记(如果可选中的菜单需要) -->
                                <Grid x:Name="GlyphPanel" VerticalAlignment="Center" Visibility="Collapsed" Margin="4,8.3,6,8.3" Height="7.4">
                                    <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" FlowDirection="LeftToRight" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"/>
                                </Grid>
                                <!-- 菜单文本等内容 -->
                                <ContentPresenter x:Name="HeaderHost" VerticalAlignment="Center" RecognizesAccessKey="True" Margin="10,1.5" Height="21" ContentSource="Header" Grid.Column="1"/>
                                <!-- 箭头绘制的路径，该路径指向菜单的下一个级别 -->
                                <Grid x:Name="ArrowPanel" VerticalAlignment="Center" Margin="4,8,1,8" Height="8" Grid.Column="3">
                                    <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                                </Grid>
                                <!-- Popup 是向下展开或横向展开(具体取决于该项所处的级别)的菜单的主体 -->
                                <Popup x:Name="SubMenuPopup" VerticalOffset="9" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" HorizontalOffset="-2" Focusable="false" AllowsTransparency="true">
                                    <Grid x:Name="SubMenu" Margin="0" Background="{x:Null}">
                                        <Border x:Name="SubMenuBorder" Margin="0,0,5,5" FlowDirection="RightToLeft" Background="#FF4C4C4F" BorderThickness="1" BorderBrush="#FF262626">
                                            <Border.Effect>
                                                <DropShadowEffect ShadowDepth="3" Opacity="0.5" Direction="225" Color="#FF262626" BlurRadius="5"/>
                                            </Border.Effect>
                                        </Border>
                                        <!-- StackPanel 保留菜单的子级。这是通过 IsItemsHost=True 来设置的 -->
                                        <StackPanel KeyboardNavigation.DirectionalNavigation="Cycle" IsItemsHost="True" Margin="0,8,5,13"/>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <!-- 这些触发器通过 Role 重新配置 MenuItem 的四种排列方式以显示不同级别的菜单 -->
                        <ControlTemplate.Triggers>

                            <!-- 如果不存在 Icon，我们会折叠 Icon Content -->
                            <!-- 对 Menu Highlight 和 IsEnabled 使用系统颜色-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSuspendingPopupAnimation" Value="False"/>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Border" Value="#FF454547"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF222324"/>
                                <Setter Property="BitmapEffect" TargetName="Border">
                                    <Setter.Value>
                                        <DropShadowBitmapEffect Softness="0" ShadowDepth="1" Opacity="0.3" Direction="270" Color="#FFBDBDBD"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <!-- Role = TopLevelHeader: 这是菜单中的根菜单项；Popup 向下展开 -->
                            <Trigger Property="Role" Value="TopLevelHeader">
                                <Setter Property="Margin" Value="0,1,0,1"/>
                                <Setter Property="Padding" Value="6,3,6,3"/>
                                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                                <Setter Property="Placement" TargetName="SubMenuPopup" Value="Bottom"/>
                                <Setter Property="Visibility" TargetName="ArrowPanel" Value="Collapsed"/>
                                <Setter Property="Margin" TargetName="SubMenu" Value="0,12,0,0"/>
                            </Trigger>
                            <!-- Role = TopLevelItem:  这是没有任何子项的顶级菜单的子菜单项-->
                            <Trigger Property="Role" Value="TopLevelItem">
                                <Setter Property="Margin" Value="0,1,0,1"/>
                                <Setter Property="Padding" Value="6,3,6,3"/>
                                <Setter Property="Visibility" TargetName="ArrowPanel" Value="Collapsed"/>
                                <Setter Property="HorizontalOffset" TargetName="SubMenuPopup" Value="-2"/>
                                <Setter Property="VerticalOffset" TargetName="SubMenuPopup" Value="9"/>
                            </Trigger>
                            <!-- Role = SubMenuHeader: 这是不包含子级的子菜单项 -->
                            <Trigger Property="Role" Value="SubmenuHeader">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                                <Setter Property="Padding" Value="0,2,0,2"/>
                                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSuspendingPopupAnimation" Value="True"/>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="PopupAnimation" TargetName="SubMenuPopup" Value="None"/>
                                <Setter Property="Background" TargetName="Border" Value="#FF29292B"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF222324"/>
                                <Setter Property="BitmapEffect" TargetName="Border">
                                    <Setter.Value>
                                        <DropShadowBitmapEffect Softness="0" ShadowDepth="1" Opacity="0.3" Direction="270" Color="#FFBDBDBD"/>
                                    </Setter.Value>
                                </Setter>
                            </MultiTrigger>
                            <!-- GlyphPanel 包含 CheckMark -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            </Trigger>
                            <!--
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="Border" Value="Black"/>
								<Setter Property="BorderBrush" TargetName="Border" Value="{x:Null}"/>
								<Setter Property="Background" TargetName="grid" Value="{x:Null}"/>
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
							</Trigger>
							-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <src:FalselHideConverter x:Key="FalseHide"/>
    </src:MyWindow.Resources>
    <src:MyWindow.Style>
        <StaticResource ResourceKey="MyWindowStyle"/>
    </src:MyWindow.Style>
	<DockPanel>
		<Border x:Name="bdr_Header" BorderBrush="Black" BorderThickness="0" Background="#FF3B3B3D" Height="40" VerticalAlignment="Top" DockPanel.Dock="Top">
			<Grid>
				<DockPanel LastChildFill="False" Margin="22,0,0,0" HorizontalAlignment="Left">
					<Image Margin="0,0,0,10" Source="/TrboX;component/resource/images/sub_title_60_20.png" Stretch="None" VerticalAlignment="Bottom"/>
					<Label Content="关于TrboX" VerticalAlignment="Bottom" FontSize="14" Foreground="#FFF1F1F1" FontFamily="Hiragino Sans GB W3" Margin="19,0,0,5.5" Padding="0"/>
				</DockPanel>
				<Button x:Name="btn_Header"  Style="{StaticResource ButtonStyleHdr}"/>
				<DockPanel LastChildFill="False" HorizontalAlignment="Right">
					<DockPanel LastChildFill="False" Margin="0"  HorizontalAlignment="Right" DockPanel.Dock="Right">
						<src:IconBtn x:Name="btn_SysClose" Height="18" VerticalAlignment="Center" DockPanel.Dock="Right" Width="18" Margin="8,0,11,0" Normal="/TrboX;component/resource/images/close_18_18_n.png" Hover="/TrboX;component/resource/images/close_18_18_h.png" HorizontalAlignment="Center" Press="/TrboX;component/resource/images/close_18_18_h.png"/>
					</DockPanel>
				</DockPanel>
				<Path Data="M6.8333333,30 L178.16667,30" Height="1" Margin="-0.5,0" Stretch="Fill" VerticalAlignment="Bottom" Stroke="{DynamicResource CutOffRuleButtom}"/>
			</Grid>
		</Border>
		<Border BorderBrush="Black" BorderThickness="0" Height="1" VerticalAlignment="Top" DockPanel.Dock="Top" Margin="0,1,0,0" Background="#FF626265"/>

		<Border BorderBrush="#FF0C0C0D" BorderThickness="1" Margin="16,12,16,16" Background="#FF3B3B3D" Padding="18,10" Width="628" DockPanel.Dock="Top">
			<Label Content="关于TrboX" Foreground="#FFF1F1F1" FontSize="13" HorizontalAlignment="Left" VerticalAlignment="Top"/>
		</Border>
	</DockPanel>
</src:MyWindow>
