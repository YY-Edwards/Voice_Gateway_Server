<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:TrboX">

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:TileView}, ResourceId = TileView}" 
           TargetType="{x:Type ListView}"
           BasedOn="{StaticResource {x:Type ListBox}}">  
        
        <Setter Property="BorderBrush" Value="Black"/>
        <!--<Setter Property="BorderThickness" Value="0.5" />-->
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth),RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>          
        </Setter>        
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:TileView}, ResourceId = TileViewItem}" 
           TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Margin" Value="7,5"/>
        <!--<Setter Property="Padding" Value="3"/>-->
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="ContentTemplate" Value="{Binding Path= View.ItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}" />
        <Setter Property="Template">
            <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd" BorderBrush="#FF0C0C0D" BorderThickness="1" Background="#FF242424" SnapsToDevicePixels="True">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Border>
                <ControlTemplate.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="Bd" Value="#FF5695DB"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                            <Condition Property="IsSelected" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="Bd" Value="#FFFFC323"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                            <Condition Property="IsSelected" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" TargetName="Bd" Value="#FFFFC323"/>
                    </MultiTrigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:MsgView}, ResourceId = MsgView}" 
           TargetType="{x:Type ListView}"
           BasedOn="{StaticResource {x:Type ListBox}}">

        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Width="{Binding (FrameworkElement.ActualWidth),RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:MsgView}, ResourceId = MsgViewItem}" 
           TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Margin" Value="2,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="ContentTemplate" Value="{Binding Path= View.ItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}" />
    </Style>


    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ContactView}, ResourceId = ContactView}" 
           TargetType="{x:Type ListView}"
           BasedOn="{StaticResource {x:Type ListBox}}">

        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth),RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local:ContactView}, ResourceId = ContactViewItem}" 
           TargetType="{x:Type ListViewItem}"
           BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate" Value="{Binding Path= View.ItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}}" />
    </Style>

</ResourceDictionary>